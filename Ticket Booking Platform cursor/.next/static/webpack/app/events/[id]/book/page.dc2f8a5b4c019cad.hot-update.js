"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/events/[id]/book/page",{

/***/ "(app-pages-browser)/./lib/api/events.ts":
/*!***************************!*\
  !*** ./lib/api/events.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   eventsApi: () => (/* binding */ eventsApi)\n/* harmony export */ });\n/* harmony import */ var _appwrite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../appwrite */ \"(app-pages-browser)/./lib/appwrite.ts\");\n/* harmony import */ var appwrite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! appwrite */ \"(app-pages-browser)/./node_modules/appwrite/dist/esm/sdk.js\");\n\n\n// Sample data for fallback\nconst sampleEvents = [\n    {\n        $id: '1',\n        name: 'Tech Conference 2024',\n        description: 'Join us for the biggest tech conference of the year featuring industry leaders and cutting-edge innovations.',\n        date: '2024-03-15',\n        time: '09:00',\n        venue: 'Convention Center',\n        category: 'Technology',\n        price: 299,\n        ticket_count: 500,\n        available_tickets: 150,\n        status: 'upcoming',\n        image_url: '/images/tech-conference.jpg',\n        created_by: 'admin',\n        tags: [\n            'technology',\n            'conference',\n            'innovation'\n        ],\n        featured: true,\n        location: JSON.stringify({\n            address: '123 Tech Street',\n            city: 'San Francisco',\n            state: 'CA',\n            country: 'USA',\n            coordinates: {\n                latitude: 37.7749,\n                longitude: -122.4194\n            }\n        }),\n        created_at: '2024-01-01T00:00:00Z',\n        updated_at: '2024-01-01T00:00:00Z'\n    },\n    {\n        $id: '2',\n        name: 'Summer Music Festival',\n        description: 'A three-day music festival featuring top artists from around the world.',\n        date: '2024-07-20',\n        time: '16:00',\n        venue: 'Central Park',\n        category: 'Music',\n        price: 199,\n        ticket_count: 1000,\n        available_tickets: 200,\n        status: 'upcoming',\n        image_url: '/images/music-festival.jpg',\n        created_by: 'admin',\n        tags: [\n            'music',\n            'festival',\n            'summer'\n        ],\n        featured: true,\n        location: JSON.stringify({\n            address: 'Central Park',\n            city: 'New York',\n            state: 'NY',\n            country: 'USA',\n            coordinates: {\n                latitude: 40.7829,\n                longitude: -73.9654\n            }\n        }),\n        created_at: '2024-01-01T00:00:00Z',\n        updated_at: '2024-01-01T00:00:00Z'\n    }\n];\nconst eventsApi = {\n    async getAll () {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.listDocuments(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events);\n            return response.documents;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents;\n        }\n    },\n    async getById (id) {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.getDocument(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, id);\n            return response;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents.find((event)=>event.$id === id) || null;\n        }\n    },\n    async create (eventData) {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.createDocument(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, appwrite__WEBPACK_IMPORTED_MODULE_1__.ID.unique(), eventData);\n            return response;\n        } catch (error) {\n            console.error('Error creating event:', error);\n            return null;\n        }\n    },\n    async update (id, eventData) {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.updateDocument(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, id, eventData);\n            return response;\n        } catch (error) {\n            console.error('Error updating event:', error);\n            return null;\n        }\n    },\n    async delete (id) {\n        try {\n            await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.deleteDocument(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, id);\n            return true;\n        } catch (error) {\n            console.error('Error deleting event:', error);\n            return false;\n        }\n    },\n    async search (query, category, status) {\n        try {\n            const queries = [\n                appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.search('name', query)\n            ];\n            if (category) queries.push(appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.equal('category', category));\n            if (status) queries.push(appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.equal('status', status));\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.listDocuments(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, queries);\n            return response.documents;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents.filter((event)=>event.name.toLowerCase().includes(query.toLowerCase()) || event.description.toLowerCase().includes(query.toLowerCase()));\n        }\n    },\n    async getUpcoming () {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.listDocuments(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, [\n                appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.equal('status', 'upcoming')\n            ]);\n            return response.documents;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents.filter((event)=>event.status === 'upcoming');\n        }\n    },\n    async getFeatured () {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.listDocuments(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, [\n                appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.equal('featured', true)\n            ]);\n            return response.documents;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents.filter((event)=>event.featured);\n        }\n    },\n    async getByCategory (category) {\n        try {\n            const response = await _appwrite__WEBPACK_IMPORTED_MODULE_0__.databases.listDocuments(_appwrite__WEBPACK_IMPORTED_MODULE_0__.databaseId, _appwrite__WEBPACK_IMPORTED_MODULE_0__.collections.events, [\n                appwrite__WEBPACK_IMPORTED_MODULE_1__.Query.equal('category', category)\n            ]);\n            return response.documents;\n        } catch (error) {\n            console.warn('Appwrite not accessible, using sample data:', error);\n            return sampleEvents.filter((event)=>event.category === category);\n        }\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFTRyxTQUFTO1FBQzNCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRQyxJQUFJLENBQUMsK0NBQStDRjtZQUM1RCxPQUFPbEMsYUFBYXVELE1BQU0sQ0FBQ2QsQ0FBQUEsUUFBU0EsTUFBTTlCLE1BQU0sS0FBSztRQUN2RDtJQUNGO0lBRUEsTUFBTWdEO1FBQ0osSUFBSTtZQUNGLE1BQU03QixXQUFXLE1BQU1uQyxnREFBU0EsQ0FBQ29DLGFBQWEsQ0FDNUNuQyxpREFBVUEsRUFDVkMsa0RBQVdBLENBQUNtQyxNQUFNLEVBQ2xCO2dCQUFDakMsMkNBQUtBLENBQUN1RCxLQUFLLENBQUMsWUFBWTthQUFNO1lBRWpDLE9BQU94QixTQUFTRyxTQUFTO1FBQzNCLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRQyxJQUFJLENBQUMsK0NBQStDRjtZQUM1RCxPQUFPbEMsYUFBYXVELE1BQU0sQ0FBQ2QsQ0FBQUEsUUFBU0EsTUFBTTFCLFFBQVE7UUFDcEQ7SUFDRjtJQUVBLE1BQU02QyxlQUFjckQsUUFBZ0I7UUFDbEMsSUFBSTtZQUNGLE1BQU11QixXQUFXLE1BQU1uQyxnREFBU0EsQ0FBQ29DLGFBQWEsQ0FDNUNuQyxpREFBVUEsRUFDVkMsa0RBQVdBLENBQUNtQyxNQUFNLEVBQ2xCO2dCQUFDakMsMkNBQUtBLENBQUN1RCxLQUFLLENBQUMsWUFBWS9DO2FBQVU7WUFFckMsT0FBT3VCLFNBQVNHLFNBQVM7UUFDM0IsRUFBRSxPQUFPQyxPQUFPO1lBQ2RDLFFBQVFDLElBQUksQ0FBQywrQ0FBK0NGO1lBQzVELE9BQU9sQyxhQUFhdUQsTUFBTSxDQUFDZCxDQUFBQSxRQUFTQSxNQUFNbEMsUUFBUSxLQUFLQTtRQUN6RDtJQUNGO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvYXBpL2V2ZW50cy50cz85ZWZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRhdGFiYXNlcywgZGF0YWJhc2VJZCwgY29sbGVjdGlvbnMgfSBmcm9tICcuLi9hcHB3cml0ZSc7XG5pbXBvcnQgeyBJRCwgUXVlcnkgfSBmcm9tICdhcHB3cml0ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRXZlbnQge1xuICAkaWQ6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBkZXNjcmlwdGlvbjogc3RyaW5nO1xuICBkYXRlOiBzdHJpbmc7XG4gIHRpbWU6IHN0cmluZztcbiAgdmVudWU6IHN0cmluZztcbiAgY2F0ZWdvcnk6IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgdGlja2V0X2NvdW50OiBudW1iZXI7XG4gIGF2YWlsYWJsZV90aWNrZXRzOiBudW1iZXI7XG4gIHN0YXR1czogJ3VwY29taW5nJyB8ICdvbmdvaW5nJyB8ICdjb21wbGV0ZWQnO1xuICBpbWFnZV91cmw6IHN0cmluZztcbiAgY3JlYXRlZF9ieTogc3RyaW5nO1xuICB0YWdzOiBzdHJpbmdbXTtcbiAgZmVhdHVyZWQ6IGJvb2xlYW47XG4gIGxvY2F0aW9uOiBzdHJpbmc7IC8vIENoYW5nZWQgZnJvbSBvYmplY3QgdG8gc3RyaW5nIHRvIG1hdGNoIEFwcHdyaXRlIHNjaGVtYVxuICBjcmVhdGVkX2F0Pzogc3RyaW5nOyAvLyBNYWRlIG9wdGlvbmFsIHNpbmNlIEFwcHdyaXRlIGhhbmRsZXMgdGhpc1xuICB1cGRhdGVkX2F0Pzogc3RyaW5nOyAvLyBNYWRlIG9wdGlvbmFsIHNpbmNlIEFwcHdyaXRlIGhhbmRsZXMgdGhpc1xufVxuXG4vLyBTYW1wbGUgZGF0YSBmb3IgZmFsbGJhY2tcbmNvbnN0IHNhbXBsZUV2ZW50czogRXZlbnRbXSA9IFtcbiAge1xuICAgICRpZDogJzEnLFxuICAgIG5hbWU6ICdUZWNoIENvbmZlcmVuY2UgMjAyNCcsXG4gICAgZGVzY3JpcHRpb246ICdKb2luIHVzIGZvciB0aGUgYmlnZ2VzdCB0ZWNoIGNvbmZlcmVuY2Ugb2YgdGhlIHllYXIgZmVhdHVyaW5nIGluZHVzdHJ5IGxlYWRlcnMgYW5kIGN1dHRpbmctZWRnZSBpbm5vdmF0aW9ucy4nLFxuICAgIGRhdGU6ICcyMDI0LTAzLTE1JyxcbiAgICB0aW1lOiAnMDk6MDAnLFxuICAgIHZlbnVlOiAnQ29udmVudGlvbiBDZW50ZXInLFxuICAgIGNhdGVnb3J5OiAnVGVjaG5vbG9neScsXG4gICAgcHJpY2U6IDI5OSxcbiAgICB0aWNrZXRfY291bnQ6IDUwMCxcbiAgICBhdmFpbGFibGVfdGlja2V0czogMTUwLFxuICAgIHN0YXR1czogJ3VwY29taW5nJyxcbiAgICBpbWFnZV91cmw6ICcvaW1hZ2VzL3RlY2gtY29uZmVyZW5jZS5qcGcnLFxuICAgIGNyZWF0ZWRfYnk6ICdhZG1pbicsXG4gICAgdGFnczogWyd0ZWNobm9sb2d5JywgJ2NvbmZlcmVuY2UnLCAnaW5ub3ZhdGlvbiddLFxuICAgIGZlYXR1cmVkOiB0cnVlLFxuICAgIGxvY2F0aW9uOiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICBhZGRyZXNzOiAnMTIzIFRlY2ggU3RyZWV0JyxcbiAgICAgIGNpdHk6ICdTYW4gRnJhbmNpc2NvJyxcbiAgICAgIHN0YXRlOiAnQ0EnLFxuICAgICAgY291bnRyeTogJ1VTQScsXG4gICAgICBjb29yZGluYXRlczogeyBsYXRpdHVkZTogMzcuNzc0OSwgbG9uZ2l0dWRlOiAtMTIyLjQxOTQgfVxuICAgIH0pLFxuICAgIGNyZWF0ZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicsXG4gICAgdXBkYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJ1xuICB9LFxuICB7XG4gICAgJGlkOiAnMicsXG4gICAgbmFtZTogJ1N1bW1lciBNdXNpYyBGZXN0aXZhbCcsXG4gICAgZGVzY3JpcHRpb246ICdBIHRocmVlLWRheSBtdXNpYyBmZXN0aXZhbCBmZWF0dXJpbmcgdG9wIGFydGlzdHMgZnJvbSBhcm91bmQgdGhlIHdvcmxkLicsXG4gICAgZGF0ZTogJzIwMjQtMDctMjAnLFxuICAgIHRpbWU6ICcxNjowMCcsXG4gICAgdmVudWU6ICdDZW50cmFsIFBhcmsnLFxuICAgIGNhdGVnb3J5OiAnTXVzaWMnLFxuICAgIHByaWNlOiAxOTksXG4gICAgdGlja2V0X2NvdW50OiAxMDAwLFxuICAgIGF2YWlsYWJsZV90aWNrZXRzOiAyMDAsXG4gICAgc3RhdHVzOiAndXBjb21pbmcnLFxuICAgIGltYWdlX3VybDogJy9pbWFnZXMvbXVzaWMtZmVzdGl2YWwuanBnJyxcbiAgICBjcmVhdGVkX2J5OiAnYWRtaW4nLFxuICAgIHRhZ3M6IFsnbXVzaWMnLCAnZmVzdGl2YWwnLCAnc3VtbWVyJ10sXG4gICAgZmVhdHVyZWQ6IHRydWUsXG4gICAgbG9jYXRpb246IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIGFkZHJlc3M6ICdDZW50cmFsIFBhcmsnLFxuICAgICAgY2l0eTogJ05ldyBZb3JrJyxcbiAgICAgIHN0YXRlOiAnTlknLFxuICAgICAgY291bnRyeTogJ1VTQScsXG4gICAgICBjb29yZGluYXRlczogeyBsYXRpdHVkZTogNDAuNzgyOSwgbG9uZ2l0dWRlOiAtNzMuOTY1NCB9XG4gICAgfSksXG4gICAgY3JlYXRlZF9hdDogJzIwMjQtMDEtMDFUMDA6MDA6MDBaJyxcbiAgICB1cGRhdGVkX2F0OiAnMjAyNC0wMS0wMVQwMDowMDowMFonXG4gIH1cbl07XG5cbmV4cG9ydCBjb25zdCBldmVudHNBcGkgPSB7XG4gIGFzeW5jIGdldEFsbCgpOiBQcm9taXNlPEV2ZW50W10+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYXRhYmFzZXMubGlzdERvY3VtZW50cyhkYXRhYmFzZUlkLCBjb2xsZWN0aW9ucy5ldmVudHMpO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmRvY3VtZW50cyBhcyBFdmVudFtdO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0FwcHdyaXRlIG5vdCBhY2Nlc3NpYmxlLCB1c2luZyBzYW1wbGUgZGF0YTonLCBlcnJvcik7XG4gICAgICByZXR1cm4gc2FtcGxlRXZlbnRzO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyBnZXRCeUlkKGlkOiBzdHJpbmcpOiBQcm9taXNlPEV2ZW50IHwgbnVsbD4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRhdGFiYXNlcy5nZXREb2N1bWVudChkYXRhYmFzZUlkLCBjb2xsZWN0aW9ucy5ldmVudHMsIGlkKTtcbiAgICAgIHJldHVybiByZXNwb25zZSBhcyBFdmVudDtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdBcHB3cml0ZSBub3QgYWNjZXNzaWJsZSwgdXNpbmcgc2FtcGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHNhbXBsZUV2ZW50cy5maW5kKGV2ZW50ID0+IGV2ZW50LiRpZCA9PT0gaWQpIHx8IG51bGw7XG4gICAgfVxuICB9LFxuXG4gIGFzeW5jIGNyZWF0ZShldmVudERhdGE6IE9taXQ8RXZlbnQsICckaWQnIHwgJ2NyZWF0ZWRfYXQnIHwgJ3VwZGF0ZWRfYXQnPik6IFByb21pc2U8RXZlbnQgfCBudWxsPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGF0YWJhc2VzLmNyZWF0ZURvY3VtZW50KFxuICAgICAgICBkYXRhYmFzZUlkLFxuICAgICAgICBjb2xsZWN0aW9ucy5ldmVudHMsXG4gICAgICAgIElELnVuaXF1ZSgpLFxuICAgICAgICBldmVudERhdGFcbiAgICAgICk7XG4gICAgICByZXR1cm4gcmVzcG9uc2UgYXMgRXZlbnQ7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGNyZWF0aW5nIGV2ZW50OicsIGVycm9yKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyB1cGRhdGUoaWQ6IHN0cmluZywgZXZlbnREYXRhOiBQYXJ0aWFsPE9taXQ8RXZlbnQsICckaWQnIHwgJ2NyZWF0ZWRfYXQnIHwgJ3VwZGF0ZWRfYXQnPj4pOiBQcm9taXNlPEV2ZW50IHwgbnVsbD4ge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGRhdGFiYXNlcy51cGRhdGVEb2N1bWVudChcbiAgICAgICAgZGF0YWJhc2VJZCxcbiAgICAgICAgY29sbGVjdGlvbnMuZXZlbnRzLFxuICAgICAgICBpZCxcbiAgICAgICAgZXZlbnREYXRhXG4gICAgICApO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlIGFzIEV2ZW50O1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciB1cGRhdGluZyBldmVudDonLCBlcnJvcik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gIH0sXG5cbiAgYXN5bmMgZGVsZXRlKGlkOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgZGF0YWJhc2VzLmRlbGV0ZURvY3VtZW50KGRhdGFiYXNlSWQsIGNvbGxlY3Rpb25zLmV2ZW50cywgaWQpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGRlbGV0aW5nIGV2ZW50OicsIGVycm9yKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0sXG5cbiAgYXN5bmMgc2VhcmNoKHF1ZXJ5OiBzdHJpbmcsIGNhdGVnb3J5Pzogc3RyaW5nLCBzdGF0dXM/OiBzdHJpbmcpOiBQcm9taXNlPEV2ZW50W10+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcXVlcmllcyA9IFtRdWVyeS5zZWFyY2goJ25hbWUnLCBxdWVyeSldO1xuICAgICAgaWYgKGNhdGVnb3J5KSBxdWVyaWVzLnB1c2goUXVlcnkuZXF1YWwoJ2NhdGVnb3J5JywgY2F0ZWdvcnkpKTtcbiAgICAgIGlmIChzdGF0dXMpIHF1ZXJpZXMucHVzaChRdWVyeS5lcXVhbCgnc3RhdHVzJywgc3RhdHVzKSk7XG4gICAgICBcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGF0YWJhc2VzLmxpc3REb2N1bWVudHMoZGF0YWJhc2VJZCwgY29sbGVjdGlvbnMuZXZlbnRzLCBxdWVyaWVzKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5kb2N1bWVudHMgYXMgRXZlbnRbXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdBcHB3cml0ZSBub3QgYWNjZXNzaWJsZSwgdXNpbmcgc2FtcGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHNhbXBsZUV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gXG4gICAgICAgIGV2ZW50Lm5hbWUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxdWVyeS50b0xvd2VyQ2FzZSgpKSB8fFxuICAgICAgICBldmVudC5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpXG4gICAgICApO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyBnZXRVcGNvbWluZygpOiBQcm9taXNlPEV2ZW50W10+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYXRhYmFzZXMubGlzdERvY3VtZW50cyhcbiAgICAgICAgZGF0YWJhc2VJZCxcbiAgICAgICAgY29sbGVjdGlvbnMuZXZlbnRzLFxuICAgICAgICBbUXVlcnkuZXF1YWwoJ3N0YXR1cycsICd1cGNvbWluZycpXVxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5kb2N1bWVudHMgYXMgRXZlbnRbXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdBcHB3cml0ZSBub3QgYWNjZXNzaWJsZSwgdXNpbmcgc2FtcGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHNhbXBsZUV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gZXZlbnQuc3RhdHVzID09PSAndXBjb21pbmcnKTtcbiAgICB9XG4gIH0sXG5cbiAgYXN5bmMgZ2V0RmVhdHVyZWQoKTogUHJvbWlzZTxFdmVudFtdPiB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZGF0YWJhc2VzLmxpc3REb2N1bWVudHMoXG4gICAgICAgIGRhdGFiYXNlSWQsXG4gICAgICAgIGNvbGxlY3Rpb25zLmV2ZW50cyxcbiAgICAgICAgW1F1ZXJ5LmVxdWFsKCdmZWF0dXJlZCcsIHRydWUpXVxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5kb2N1bWVudHMgYXMgRXZlbnRbXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdBcHB3cml0ZSBub3QgYWNjZXNzaWJsZSwgdXNpbmcgc2FtcGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHNhbXBsZUV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gZXZlbnQuZmVhdHVyZWQpO1xuICAgIH1cbiAgfSxcblxuICBhc3luYyBnZXRCeUNhdGVnb3J5KGNhdGVnb3J5OiBzdHJpbmcpOiBQcm9taXNlPEV2ZW50W10+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkYXRhYmFzZXMubGlzdERvY3VtZW50cyhcbiAgICAgICAgZGF0YWJhc2VJZCxcbiAgICAgICAgY29sbGVjdGlvbnMuZXZlbnRzLFxuICAgICAgICBbUXVlcnkuZXF1YWwoJ2NhdGVnb3J5JywgY2F0ZWdvcnkpXVxuICAgICAgKTtcbiAgICAgIHJldHVybiByZXNwb25zZS5kb2N1bWVudHMgYXMgRXZlbnRbXTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS53YXJuKCdBcHB3cml0ZSBub3QgYWNjZXNzaWJsZSwgdXNpbmcgc2FtcGxlIGRhdGE6JywgZXJyb3IpO1xuICAgICAgcmV0dXJuIHNhbXBsZUV2ZW50cy5maWx0ZXIoZXZlbnQgPT4gZXZlbnQuY2F0ZWdvcnkgPT09IGNhdGVnb3J5KTtcbiAgICB9XG4gIH1cbn07ICJdLCJuYW1lcyI6WyJkYXRhYmFzZXMiLCJkYXRhYmFzZUlkIiwiY29sbGVjdGlvbnMiLCJJRCIsIlF1ZXJ5Iiwic2FtcGxlRXZlbnRzIiwiJGlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwiZGF0ZSIsInRpbWUiLCJ2ZW51ZSIsImNhdGVnb3J5IiwicHJpY2UiLCJ0aWNrZXRfY291bnQiLCJhdmFpbGFibGVfdGlja2V0cyIsInN0YXR1cyIsImltYWdlX3VybCIsImNyZWF0ZWRfYnkiLCJ0YWdzIiwiZmVhdHVyZWQiLCJsb2NhdGlvbiIsIkpTT04iLCJzdHJpbmdpZnkiLCJhZGRyZXNzIiwiY2l0eSIsInN0YXRlIiwiY291bnRyeSIsImNvb3JkaW5hdGVzIiwibGF0aXR1ZGUiLCJsb25naXR1ZGUiLCJjcmVhdGVkX2F0IiwidXBkYXRlZF9hdCIsImV2ZW50c0FwaSIsImdldEFsbCIsInJlc3BvbnNlIiwibGlzdERvY3VtZW50cyIsImV2ZW50cyIsImRvY3VtZW50cyIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJnZXRCeUlkIiwiaWQiLCJnZXREb2N1bWVudCIsImZpbmQiLCJldmVudCIsImNyZWF0ZSIsImV2ZW50RGF0YSIsImNyZWF0ZURvY3VtZW50IiwidW5pcXVlIiwidXBkYXRlIiwidXBkYXRlRG9jdW1lbnQiLCJkZWxldGUiLCJkZWxldGVEb2N1bWVudCIsInNlYXJjaCIsInF1ZXJ5IiwicXVlcmllcyIsInB1c2giLCJlcXVhbCIsImZpbHRlciIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJnZXRVcGNvbWluZyIsImdldEZlYXR1cmVkIiwiZ2V0QnlDYXRlZ29yeSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api/events.ts\n"));

/***/ })

});